# query GetUser($getUserId: String!) {
#   getUser(id: $getUserId) {
#     firstName
#     lastName
#     password
#     emailVerified
#     phone
#     email
#   }
# }

# query GetProducts($first: Int, $after: String, $before: String, $last: Int) {
#   getProducts(first: $first, after: $after, before: $before, last: $last) {
#     pageInfo {
#       endCursor
#       hasNextPage
#       startCursor
#       hasPreviousPage
#     }
#     edges {
#       cursor
#       node {
#         id
#         category {
#           title
#         }
#         images
#         name
#         price


#         ratings
#         sellingPrice
#       }
#     }
#   }
# }


 <TabsContent value="orders">
          <Card>
            <CardHeader>
              <CardTitle>Order History</CardTitle>
              <CardDescription>
                View your past orders and their status.
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {orders.map(order => (
                  <div
                    key={order.id}
                    className="flex items-center justify-between border-b pb-4"
                  >
                    <div>
                      <p className="font-medium">Order #{order.id}</p>
                      <p className="text-sm text-muted-foreground">
                        {order.date}
                      </p>
                    </div>
                    <div className="text-right">
                      <p
                        className={`font-medium ${
                          order.status === 'Delivered'
                            ? 'text-green-600'
                            : 'text-blue-600'
                        }`}
                      >
                        {order.status}
                      </p>
                      <p className="text-sm">{order.total}</p>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="addresses">
          <Card>
            <CardHeader>
              <CardTitle>Saved Addresses</CardTitle>
              <CardDescription>
                Manage your saved addresses for faster checkout.
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {addresses.map(address => (
                  <div
                    key={address.id}
                    className="flex items-start justify-between border-b pb-4"
                  >
                    <div>
                      <p className="font-medium">{address.type}</p>
                      <p className="text-sm text-muted-foreground">
                        {address.address}
                      </p>
                    </div>
                    <Button variant="outline" size="sm">
                      Edit
                    </Button>
                  </div>
                ))}
                <Button className="w-full">
                  <MapPin className="mr-2 h-4 w-4" /> Add New Address
                </Button>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="payment">
          <Card>
            <CardHeader>
              <CardTitle>Payment Methods</CardTitle>
              <CardDescription>
                Manage your saved payment methods.
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {paymentMethods.map(method => (
                  <div
                    key={method.id}
                    className="flex items-center justify-between border-b pb-4"
                  >
                    <div className="flex items-center space-x-4">
                      <CreditCard className="h-6 w-6" />
                      <div>
                        <p className="font-medium">
                          {method.type} ending in {method.last4}
                        </p>
                        <p className="text-sm text-muted-foreground">
                          Expires {method.expiry}
                        </p>
                      </div>
                    </div>
                    <Button variant="outline" size="sm">
                      Edit
                    </Button>
                  </div>
                ))}
                <Button className="w-full">
                  <CreditCard className="mr-2 h-4 w-4" /> Add New Payment Method
                </Button>
              </div>
            </CardContent>
          </Card>
        </TabsContent>


         